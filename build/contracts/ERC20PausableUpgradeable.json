{
  "contractName": "ERC20PausableUpgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug.\",\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/alainherrera/Documents/truffleFINAL/contracts/extensions/ERC20PausableUpgradeable.sol\":\"ERC20PausableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/alainherrera/Documents/truffleFINAL/contracts/ERC20Upgradeable.sol\":{\"keccak256\":\"0x5bc88cb1d369776dc9db323774b534c201a58a4f0468b4175bf86d683b9dc6bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8e06e23eb9ae67596db4aefd867d555f6165a38a70fb836b7d4dc4d32751acd\",\"dweb:/ipfs/QmddPFvSFus8xqQHNxZCXgBoKV7fSuZG48JJDRXHHYmyut\"]},\"/Users/alainherrera/Documents/truffleFINAL/contracts/IERC20Upgradeable.sol\":{\"keccak256\":\"0x3fcd049387a9cdafaef368febcbfa71c1f4482a1e9421cc008feb651ad9b6467\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e2fd5102e408086ce5879da2aa2c45a65447d6ad263306134b8e52cf616d63a\",\"dweb:/ipfs/QmScWvKJHaHcZfdX7oxrdkdEyT7ZLwjE9AJdUx5SboyzzZ\"]},\"/Users/alainherrera/Documents/truffleFINAL/contracts/OwnableUpgradeable.sol\":{\"keccak256\":\"0x9cc438d17e771885079396a9c60e797d57dfb80902864f437b1aa63eb29c03b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31fb6d26341367916d29161be794b6df724b219aaa89d3a3219cfc4348a1e896\",\"dweb:/ipfs/QmWaGnKp8VMsAyCZbTNFg3cmmnepdAUksZna7199vpQmxZ\"]},\"/Users/alainherrera/Documents/truffleFINAL/contracts/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0x87e61aa2fdb41833adc3644ccff164dce59a7b361429fc822a660a18f1d2e432\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d482feeac036de60755c55ae298f5bbae7efc9afcf82c744ffffb3726d583a97\",\"dweb:/ipfs/Qmcd7tCzvL6ULNxc78Jksg8yfn4n1hR26RRi1WABpyzecG\"]},\"/Users/alainherrera/Documents/truffleFINAL/contracts/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x728bf0ec03ef9cfe9cf3dd508625e34f21c9d74299194f13cc0f0d2066c43f29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fc978e217dd955e303457e83e54c74ddde5ec0d1a696320988034d6a2bc5d7\",\"dweb:/ipfs/QmXX3SJq3aKFH7SMDCc28GqX2muBZZihyv3EEhp9M84ZxX\"]},\"/Users/alainherrera/Documents/truffleFINAL/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x1f8e2e834d6abf13ca76a65609c5438f772b509864ded28d94309c39d862ec47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b28e136344ae7232bcbe490dec84275c701685708d3de265f67b51d4e2398242\",\"dweb:/ipfs/QmYbSY2xC8dwqtn35HbcrvgHJHbmVVhQLGkk7aA2GdaoJb\"]},\"/Users/alainherrera/Documents/truffleFINAL/contracts/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xaf064128e585ee4e54025b09c646575b0c1636761f7f9cb0f37e1d139b070425\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4625f2d879637be5f74cb6ef1975aea068583e3a5f79095eeabcd3de2a88576\",\"dweb:/ipfs/QmYZSGDTVPTQdsTs19SMcwjSSeCan4WLVqMNnsu9PtSZNa\"]},\"/Users/alainherrera/Documents/truffleFINAL/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xa782c153b190cfb859c428403943d9edfabd32712cd16a9552d826591ec4ae85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://457d1bbc17083e2005f43a056ecc74683131fedb52784eaad50362982825bdad\",\"dweb:/ipfs/QmdvBmPV5zz64CUBDctVjzQ9TczqokrJbnNq6sv8vWtZns\"]},\"/Users/alainherrera/Documents/truffleFINAL/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xeb4e0e54dc8f372ffa549614edfa24c23052f07e203a91acf8834c1f39b6e8b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65b50b05965cf6c495833246b76142aefc8902b7f98bd891ce3a77b03dd4bf40\",\"dweb:/ipfs/QmPwju2iZgDwiXgzmkf2KoGZYHkVgwNW1wp8A9rVXtixag\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../security/PausableUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n */\nabstract contract ERC20PausableUpgradeable is Initializable, ERC20Upgradeable, PausableUpgradeable {\n    function __ERC20Pausable_init() internal initializer {\n        __Context_init_unchained();\n        __Pausable_init_unchained();\n        __ERC20Pausable_init_unchained();\n    }\n\n    function __ERC20Pausable_init_unchained() internal initializer {\n    }\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    //function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        //super._beforeTokenTransfer(from, to, amount);\n\n        //require(!paused(), \"ERC20Pausable: token transfer while paused\");\n}\n    //uint256[50] private __gap;\n",
  "sourcePath": "/Users/alainherrera/Documents/truffleFINAL/contracts/extensions/ERC20PausableUpgradeable.sol",
  "ast": {
    "absolutePath": "/Users/alainherrera/Documents/truffleFINAL/contracts/extensions/ERC20PausableUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1973
      ],
      "ContextUpgradeable": [
        2018
      ],
      "ERC20PausableUpgradeable": [
        1544
      ],
      "ERC20Upgradeable": [
        482
      ],
      "IERC20MetadataUpgradeable": [
        1569
      ],
      "IERC20Upgradeable": [
        551
      ],
      "Initializable": [
        1616
      ],
      "OwnableUpgradeable": [
        673
      ],
      "PausableUpgradeable": [
        1729
      ]
    },
    "id": 1545,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1512,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "/Users/alainherrera/Documents/truffleFINAL/contracts/ERC20Upgradeable.sol",
        "file": "../ERC20Upgradeable.sol",
        "id": 1513,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1545,
        "sourceUnit": 483,
        "src": "58:33:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alainherrera/Documents/truffleFINAL/contracts/security/PausableUpgradeable.sol",
        "file": "../security/PausableUpgradeable.sol",
        "id": 1514,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1545,
        "sourceUnit": 1730,
        "src": "92:45:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alainherrera/Documents/truffleFINAL/contracts/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 1515,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1545,
        "sourceUnit": 1617,
        "src": "138:42:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1517,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1616,
              "src": "498:13:7"
            },
            "id": 1518,
            "nodeType": "InheritanceSpecifier",
            "src": "498:13:7"
          },
          {
            "baseName": {
              "id": 1519,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 482,
              "src": "513:16:7"
            },
            "id": 1520,
            "nodeType": "InheritanceSpecifier",
            "src": "513:16:7"
          },
          {
            "baseName": {
              "id": 1521,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1729,
              "src": "531:19:7"
            },
            "id": 1522,
            "nodeType": "InheritanceSpecifier",
            "src": "531:19:7"
          }
        ],
        "contractDependencies": [
          482,
          551,
          673,
          1569,
          1616,
          1729,
          2018
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1516,
          "nodeType": "StructuredDocumentation",
          "src": "182:269:7",
          "text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug."
        },
        "fullyImplemented": true,
        "id": 1544,
        "linearizedBaseContracts": [
          1544,
          1729,
          482,
          673,
          1569,
          551,
          2018,
          1616
        ],
        "name": "ERC20PausableUpgradeable",
        "nameLocation": "470:24:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1536,
              "nodeType": "Block",
              "src": "610:122:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1527,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "620:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1529,
                  "nodeType": "ExpressionStatement",
                  "src": "620:26:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1530,
                      "name": "__Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1660,
                      "src": "656:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "656:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1532,
                  "nodeType": "ExpressionStatement",
                  "src": "656:27:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1533,
                      "name": "__ERC20Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1543,
                      "src": "693:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "693:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "693:32:7"
                }
              ]
            },
            "id": 1537,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1525,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1524,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1615,
                  "src": "598:11:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "598:11:7"
              }
            ],
            "name": "__ERC20Pausable_init",
            "nameLocation": "566:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:2:7"
            },
            "returnParameters": {
              "id": 1526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:0:7"
            },
            "scope": 1544,
            "src": "557:175:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1542,
              "nodeType": "Block",
              "src": "801:7:7",
              "statements": []
            },
            "id": 1543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1540,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1539,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1615,
                  "src": "789:11:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "789:11:7"
              }
            ],
            "name": "__ERC20Pausable_init_unchained",
            "nameLocation": "747:30:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "777:2:7"
            },
            "returnParameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "801:0:7"
            },
            "scope": 1544,
            "src": "738:70:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1545,
        "src": "452:736:7"
      }
    ],
    "src": "33:1189:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/alainherrera/Documents/truffleFINAL/contracts/extensions/ERC20PausableUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        1973
      ],
      "ContextUpgradeable": [
        2018
      ],
      "ERC20PausableUpgradeable": [
        1544
      ],
      "ERC20Upgradeable": [
        482
      ],
      "IERC20MetadataUpgradeable": [
        1569
      ],
      "IERC20Upgradeable": [
        551
      ],
      "Initializable": [
        1616
      ],
      "OwnableUpgradeable": [
        673
      ],
      "PausableUpgradeable": [
        1729
      ]
    },
    "id": 1545,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1512,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "/Users/alainherrera/Documents/truffleFINAL/contracts/ERC20Upgradeable.sol",
        "file": "../ERC20Upgradeable.sol",
        "id": 1513,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1545,
        "sourceUnit": 483,
        "src": "58:33:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alainherrera/Documents/truffleFINAL/contracts/security/PausableUpgradeable.sol",
        "file": "../security/PausableUpgradeable.sol",
        "id": 1514,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1545,
        "sourceUnit": 1730,
        "src": "92:45:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alainherrera/Documents/truffleFINAL/contracts/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 1515,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1545,
        "sourceUnit": 1617,
        "src": "138:42:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1517,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1616,
              "src": "498:13:7"
            },
            "id": 1518,
            "nodeType": "InheritanceSpecifier",
            "src": "498:13:7"
          },
          {
            "baseName": {
              "id": 1519,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 482,
              "src": "513:16:7"
            },
            "id": 1520,
            "nodeType": "InheritanceSpecifier",
            "src": "513:16:7"
          },
          {
            "baseName": {
              "id": 1521,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1729,
              "src": "531:19:7"
            },
            "id": 1522,
            "nodeType": "InheritanceSpecifier",
            "src": "531:19:7"
          }
        ],
        "contractDependencies": [
          482,
          551,
          673,
          1569,
          1616,
          1729,
          2018
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1516,
          "nodeType": "StructuredDocumentation",
          "src": "182:269:7",
          "text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug."
        },
        "fullyImplemented": true,
        "id": 1544,
        "linearizedBaseContracts": [
          1544,
          1729,
          482,
          673,
          1569,
          551,
          2018,
          1616
        ],
        "name": "ERC20PausableUpgradeable",
        "nameLocation": "470:24:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1536,
              "nodeType": "Block",
              "src": "610:122:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1527,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "620:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:26:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1529,
                  "nodeType": "ExpressionStatement",
                  "src": "620:26:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1530,
                      "name": "__Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1660,
                      "src": "656:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "656:27:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1532,
                  "nodeType": "ExpressionStatement",
                  "src": "656:27:7"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1533,
                      "name": "__ERC20Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1543,
                      "src": "693:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "693:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "693:32:7"
                }
              ]
            },
            "id": 1537,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1525,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1524,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1615,
                  "src": "598:11:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "598:11:7"
              }
            ],
            "name": "__ERC20Pausable_init",
            "nameLocation": "566:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:2:7"
            },
            "returnParameters": {
              "id": 1526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:0:7"
            },
            "scope": 1544,
            "src": "557:175:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1542,
              "nodeType": "Block",
              "src": "801:7:7",
              "statements": []
            },
            "id": 1543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1540,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1539,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1615,
                  "src": "789:11:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "789:11:7"
              }
            ],
            "name": "__ERC20Pausable_init_unchained",
            "nameLocation": "747:30:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "777:2:7"
            },
            "returnParameters": {
              "id": 1541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "801:0:7"
            },
            "scope": 1544,
            "src": "738:70:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1545,
        "src": "452:736:7"
      }
    ],
    "src": "33:1189:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-09T08:27:31.627Z",
  "devdoc": {
    "details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug.",
    "kind": "dev",
    "methods": {
      "decimals()": {
        "details": "Returns the decimals places of the token."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "symbol()": {
        "details": "Returns the symbol of the token."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}